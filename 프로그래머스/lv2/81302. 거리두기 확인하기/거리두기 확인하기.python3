def check_distance(r, c, place):
    if r == 5 and c == 4:
        return True
    # 한 칸 거리
    if place[r][c+1] == "P" or place[r+1][c] == "P":
        return False
    # 직선으로 두칸 거리
    if place[r][c+2] == "P":
        if place[r][c+1] != "X":
            return False
    if place[r+2][c] == "P":
        if place[r+1][c] != "X":
            return False
    # 대각선 오른쪽아래
    if place[r+1][c+1] == "P":
        if place[r][c+1] != "X" or place[r+1][c] != "X":
            return False
    # 대각선 오른쪽 위
    if place[r-1][c+1] == "P":
        if place[r-1][c] != "X" or place[r][c+1] != "X":
            return False
    return True


def check_place_distance(place):
    for r in range(1, 6):
        for c in range(5):
            if place[r][c] == "P":
                if not check_distance(r, c, place):
                    print(r,c)
                    return 0
    return 1
    

def solution(places):
    answer = []
    for place in places:
        for i in range(5):
            place[i] += "OO"
        place = ["OOOOOOO"] + place + ["OOOOOOO", "OOOOOOO"]
        answer.append(check_place_distance(place))
    return answer