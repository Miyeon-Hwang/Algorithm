def solution(rows, columns, queries):
    table = [[0 for _ in range(columns)] for _ in range(rows)]
    num = 1
    for r in range(rows):
        for c in range(columns):
            table[r][c] = num
            num += 1

    if len(queries) == 1:
        return [table[queries[0][0] - 1][queries[0][1] - 1]]

    oper_x = [0, 1, 0, -1] # 시계 방향 회전을 위해
    oper_y = [1, 0, -1, 0]
    answer = []
    for q in queries:
        x1, y1, x2, y2 = list(map(lambda x: x - 1, q))
        min_val = table[x1][y1]
        oper = 0
        cur = (x1, y1)
        val = min_val
        while oper != -1: # 회전이 다끝나면 oper = -1
            cx, cy = cur
            nx, ny = (cx + oper_x[oper], cy + oper_y[oper])
            if min_val > table[nx][ny]:
                min_val = table[nx][ny]

            val, table[nx][ny] = (table[nx][ny], val)

            # 방향 바뀌는 지점마다 oper 변경
            if nx == x1:
                if ny == y2:
                    oper = 1
                elif ny == y1:
                    oper = -1
            elif nx == x2:
                if ny == y1:
                    oper = 3
                elif ny == y2:
                    oper = 2
            cur = (nx, ny)

        answer.append(min_val)

    return answer