# 처음에 스택 생각했다가.. 빼는거랑 남기는걸 반대로? 생각해서 방향 틀었음..ㅜ 
def solution(number, k):
    stack = [number[0]]
    for num in number[1:]:
        while stack and k > 0 and stack[-1] < num:
            k -= 1
            stack.pop()
        stack.append(num)
    if k > 0:
        stack = stack[:-k]
    return "".join(stack)


# answer length를 생각해서 특정 범위에서 max를 하나씩 찾아가겠다는 아이디어는 잘생각했으나..
# stack 풀이에 비해 시간이 너무 오래걸림...
# def get_maxnum_and_index(nlist):
#     res = (-1, -1)
#     for i, n in enumerate(nlist):
#         if n == 9:
#             return (n, i)
#         if res[0] < n:
#             res = (n, i)
#     return res

# def solution(number, k):
#     nlist = list(map(int, number))
#     l = len(number)
#     answer = ''
#     left = 0
#     num_cnt = l - k
#     while num_cnt > 0:
#         curnum, curidx = get_maxnum_and_index(nlist[left:l - num_cnt + 1])
#         answer += str(curnum)
#         left += curidx + 1
#         num_cnt -= 1
#     return answer