def solution(n, k, cmd):
    def move(cur, cnt, direction):
        d = 0 if direction == -1 else 1
        for i in range(cnt):
            cur = table[cur][d]
        return cur

    def delete_from_table(cur):
        deleted.append(cur)
        prev, next = table[cur]
        if prev >= 0:
            table[prev][1] = next
        if next < n:
            table[next][0] = prev
        return prev if next > n - 1 else next

    def restore(cur):
        prev, next = table[cur] # 가장 최근에 삭제된 애가 restore 되니까 cur의 prev, next에 그대로 연결해주면 됨
        if prev >= 0:
            table[prev][1] = cur
        if next < n:
            table[next][0] = cur

    table = dict()
    for i in range(n):
        table[i] = [i - 1, i + 1]
    deleted = []
    select = k
    for c in cmd:
        if c[0] == "U":
            select = move(select, int(c[2:]), -1)
        elif c[0] == "D":
            select = move(select, int(c[2:]), 1)
        elif c[0] == "C":
            select = delete_from_table(select)
        else: # Z
            restore(deleted.pop())
    answer = ['O' for i in range(n)]
    for d in deleted:
        answer[d] = 'X'
    return ''.join(answer)